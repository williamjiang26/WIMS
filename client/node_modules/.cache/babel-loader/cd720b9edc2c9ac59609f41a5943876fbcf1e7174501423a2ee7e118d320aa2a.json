{"ast":null,"code":"const vitalsUrl = 'https://vitals.vercel-analytics.com/v1/vitals';\nfunction getConnectionSpeed() {\n  return 'connection' in navigator && navigator['connection'] && 'effectiveType' in navigator['connection'] ? navigator['connection']['effectiveType'] : '';\n}\nexport function sendToVercelAnalytics(metric) {\n  const analyticsId = process.env.REACT_APP_VERCEL_ANALYTICS_ID;\n  if (!analyticsId) {\n    return;\n  }\n  const body = {\n    dsn: analyticsId,\n    id: metric.id,\n    page: window.location.pathname,\n    href: window.location.href,\n    event_name: metric.name,\n    value: metric.value.toString(),\n    speed: getConnectionSpeed()\n  };\n  const blob = new Blob([new URLSearchParams(body).toString()], {\n    // This content type is necessary for `sendBeacon`\n    type: 'application/x-www-form-urlencoded'\n  });\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon(vitalsUrl, blob);\n  } else fetch(vitalsUrl, {\n    body: blob,\n    method: 'POST',\n    credentials: 'omit',\n    keepalive: true\n  });\n}","map":{"version":3,"names":["vitalsUrl","getConnectionSpeed","navigator","sendToVercelAnalytics","metric","analyticsId","process","env","REACT_APP_VERCEL_ANALYTICS_ID","body","dsn","id","page","window","location","pathname","href","event_name","name","value","toString","speed","blob","Blob","URLSearchParams","type","sendBeacon","fetch","method","credentials","keepalive"],"sources":["/Users/williamjiang26/AIT/WIMS/client/src/vitals.js"],"sourcesContent":["const vitalsUrl = 'https://vitals.vercel-analytics.com/v1/vitals';\n\nfunction getConnectionSpeed() {\n  return 'connection' in navigator &&\n    navigator['connection'] &&\n    'effectiveType' in navigator['connection']\n    ? navigator['connection']['effectiveType']\n    : '';\n}\n\nexport function sendToVercelAnalytics(metric) {\n  const analyticsId = process.env.REACT_APP_VERCEL_ANALYTICS_ID;\n  if (!analyticsId) {\n    return;\n  }\n\n  const body = {\n    dsn: analyticsId,\n    id: metric.id,\n    page: window.location.pathname,\n    href: window.location.href,\n    event_name: metric.name,\n    value: metric.value.toString(),\n    speed: getConnectionSpeed(),\n  };\n\n  const blob = new Blob([new URLSearchParams(body).toString()], {\n    // This content type is necessary for `sendBeacon`\n    type: 'application/x-www-form-urlencoded',\n  });\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon(vitalsUrl, blob);\n  } else\n    fetch(vitalsUrl, {\n      body: blob,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    });\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,+CAA+C;AAEjE,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,OAAO,YAAY,IAAIC,SAAS,IAC9BA,SAAS,CAAC,YAAY,CAAC,IACvB,eAAe,IAAIA,SAAS,CAAC,YAAY,CAAC,GACxCA,SAAS,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,GACxC,EAAE;AACR;AAEA,OAAO,SAASC,qBAAqBA,CAACC,MAAM,EAAE;EAC5C,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EAC7D,IAAI,CAACH,WAAW,EAAE;IAChB;EACF;EAEA,MAAMI,IAAI,GAAG;IACXC,GAAG,EAAEL,WAAW;IAChBM,EAAE,EAAEP,MAAM,CAACO,EAAE;IACbC,IAAI,EAAEC,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC9BC,IAAI,EAAEH,MAAM,CAACC,QAAQ,CAACE,IAAI;IAC1BC,UAAU,EAAEb,MAAM,CAACc,IAAI;IACvBC,KAAK,EAAEf,MAAM,CAACe,KAAK,CAACC,QAAQ,EAAE;IAC9BC,KAAK,EAAEpB,kBAAkB;EAC3B,CAAC;EAED,MAAMqB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAIC,eAAe,CAACf,IAAI,CAAC,CAACW,QAAQ,EAAE,CAAC,EAAE;IAC5D;IACAK,IAAI,EAAE;EACR,CAAC,CAAC;EACF,IAAIvB,SAAS,CAACwB,UAAU,EAAE;IACxBxB,SAAS,CAACwB,UAAU,CAAC1B,SAAS,EAAEsB,IAAI,CAAC;EACvC,CAAC,MACCK,KAAK,CAAC3B,SAAS,EAAE;IACfS,IAAI,EAAEa,IAAI;IACVM,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE;EACb,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}